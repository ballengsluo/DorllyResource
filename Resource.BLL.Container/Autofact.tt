<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
<#
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);
string inputFile =@"..\\Resource.Model\\DorllyResource.edmx";
EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();
EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>
using System;
using Autofac;
using Resource.IBLL;
using Resource.BLL;

namespace Resource.BLL.Container
{

	 public class Container
    {
		public static IContainer autoContainer = null;

        public static T Resolve<T>()
        {
            try
            {
                if (autoContainer == null)
                    Initialise();
            }
            catch (Exception ex)
            {
                throw new Exception("IOC实例化出错:" + ex.Message);
            }
            return autoContainer.Resolve<T>();
        }

		public static void Initialise()
        {
            ContainerBuilder builder = new ContainerBuilder();
			<#
			foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
			{
			#>
				builder.RegisterType<<#=entity.Name.Split('_')[1]#>Service>().As<I<#=entity.Name.Split('_')[1]#>Service>();     
			<#}#>	
            autoContainer = builder.Build();
        }
    } 
}
